/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: avsconfig.proto */

#ifndef PROTOBUF_C_avsconfig_2eproto__INCLUDED
#define PROTOBUF_C_avsconfig_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _AVSConfigRequest AVSConfigRequest;
typedef struct _AVSConfigResponse AVSConfigResponse;


/* --- enums --- */

typedef enum _AVSConfigStatus {
    AVSCONFIG_STATUS__Success = 0,
    AVSCONFIG_STATUS__InvalidParam = 1,
    AVSCONFIG_STATUS__InvalidState = 2
                                     PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AVSCONFIG_STATUS)
} AVSConfigStatus;

/* --- messages --- */

struct  _AVSConfigRequest {
    ProtobufCMessage base;
    char *authcode;
    char *clientid;
    char *redirecturi;
    char *codeverifier;
};
#define AVSCONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&avsconfig_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _AVSConfigResponse {
    ProtobufCMessage base;
    AVSConfigStatus status;
    int32_t dummy;
};
#define AVSCONFIG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&avsconfig_response__descriptor) \
    , AVSCONFIG_STATUS__Success, 0 }


/* AVSConfigRequest methods */
void   avsconfig_request__init
(AVSConfigRequest         *message);
size_t avsconfig_request__get_packed_size
(const AVSConfigRequest   *message);
size_t avsconfig_request__pack
(const AVSConfigRequest   *message,
 uint8_t             *out);
size_t avsconfig_request__pack_to_buffer
(const AVSConfigRequest   *message,
 ProtobufCBuffer     *buffer);
AVSConfigRequest *
avsconfig_request__unpack
(ProtobufCAllocator  *allocator,
 size_t               len,
 const uint8_t       *data);
void   avsconfig_request__free_unpacked
(AVSConfigRequest *message,
 ProtobufCAllocator *allocator);
/* AVSConfigResponse methods */
void   avsconfig_response__init
(AVSConfigResponse         *message);
size_t avsconfig_response__get_packed_size
(const AVSConfigResponse   *message);
size_t avsconfig_response__pack
(const AVSConfigResponse   *message,
 uint8_t             *out);
size_t avsconfig_response__pack_to_buffer
(const AVSConfigResponse   *message,
 ProtobufCBuffer     *buffer);
AVSConfigResponse *
avsconfig_response__unpack
(ProtobufCAllocator  *allocator,
 size_t               len,
 const uint8_t       *data);
void   avsconfig_response__free_unpacked
(AVSConfigResponse *message,
 ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AVSConfigRequest_Closure)
(const AVSConfigRequest *message,
 void *closure_data);
typedef void (*AVSConfigResponse_Closure)
(const AVSConfigResponse *message,
 void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    avsconfig_status__descriptor;
extern const ProtobufCMessageDescriptor avsconfig_request__descriptor;
extern const ProtobufCMessageDescriptor avsconfig_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_avsconfig_2eproto__INCLUDED */
